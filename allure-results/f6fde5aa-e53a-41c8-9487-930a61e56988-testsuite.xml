<ns0:test-suite xmlns:ns0="urn:model.allure.qatools.yandex.ru" start="1487271107807" stop="1487271134466">
  <name>test.test_add_group</name>
  <test-cases>
    <test-case start="1487271107807" status="passed" stop="1487271115808">
      <name>test_add_group[None:::]</name>
      <steps/>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="4004-MainThread"/>
        <label name="host" value="DESKTOP-TRIRNDH"/>
      </labels>
    </test-case>
    <test-case start="1487271115808" status="passed" stop="1487271117587">
      <name>test_add_group[None:name:headerF^Yg DC^G?i:footer@"I[m]</name>
      <steps/>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="4004-MainThread"/>
        <label name="host" value="DESKTOP-TRIRNDH"/>
      </labels>
    </test-case>
    <test-case start="1487271117587" status="passed" stop="1487271119351">
      <name>test_add_group[None:name}IU#0 :header3y=2Z2&amp;Ah{N(jNJ(:footerZ"w)\HuD", 1M.&lt;V N]</name>
      <steps/>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="4004-MainThread"/>
        <label name="host" value="DESKTOP-TRIRNDH"/>
      </labels>
    </test-case>
    <test-case start="1487271119352" status="failed" stop="1487271121363">
      <name>test_add_group[None:name x1[|&gt;+J:header6A jS@m :footerE mS+']</name>
      <failure>
        <stack-trace>app = &lt;fixture.application.Application object at 0x0000022A22FF2AC8&gt;
db = &lt;fixture.db.DbFixture object at 0x0000022A22EF8A20&gt;
json_groups = None:name x1[|&gt;+J:header6A jS@m :footerE mS+', check_ui = False

    def test_add_group(app, db, json_groups, check_ui):
            group = json_groups
            old_groups = db.get_group_list()
            app.group.create(group)
            new_groups = db.get_group_list()
            old_groups.append(group)
&gt;           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)
E           assert [27:test:zxvz... 1M.&lt;V N, ...] == [27:test:zxvzx... 1M.&lt;V N, ...]
E             Left contains more items, first extra item: None:name x1[|&gt;+J:header6A jS@m :footerE mS+'
E             Use -v to get the full diff

test\test_add_group.py:10: AssertionError</stack-trace>
        <message>AssertionError: assert [27:test:zxvz... 1M.&lt;V N, ...] == [27:test:zxvzx... 1M.&lt;V N, ...]
  Left contains more items, first extra item: None:name x1[|&gt;+J:header6A jS@m :footerE mS+'
  Use -v to get the full diff</message>
      </failure>
      <steps/>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="4004-MainThread"/>
        <label name="host" value="DESKTOP-TRIRNDH"/>
      </labels>
    </test-case>
    <test-case start="1487271121364" status="passed" stop="1487271123208">
      <name>test_add_group[None:nameuBD:headerZ.Q)Hl0:footer-{} :SNiQo^j|0]</name>
      <steps/>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="4004-MainThread"/>
        <label name="host" value="DESKTOP-TRIRNDH"/>
      </labels>
    </test-case>
    <test-case start="1487271123208" status="failed" stop="1487271124878">
      <name>test_add_group[None:nameUV:header   sSi2+:footeropd'O!|N?4d]</name>
      <failure>
        <stack-trace>app = &lt;fixture.application.Application object at 0x0000022A22FF2AC8&gt;
db = &lt;fixture.db.DbFixture object at 0x0000022A22EF8A20&gt;
json_groups = None:nameUV:header   sSi2+:footeropd'O!|N?4d, check_ui = False

    def test_add_group(app, db, json_groups, check_ui):
            group = json_groups
            old_groups = db.get_group_list()
            app.group.create(group)
            new_groups = db.get_group_list()
            old_groups.append(group)
&gt;           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)
E           assert [27:test:zxvz... 1M.&lt;V N, ...] == [27:test:zxvzx... 1M.&lt;V N, ...]
E             Left contains more items, first extra item: None:nameUV:header   sSi2+:footeropd'O!|N?4d
E             Use -v to get the full diff

test\test_add_group.py:10: AssertionError</stack-trace>
        <message>AssertionError: assert [27:test:zxvz... 1M.&lt;V N, ...] == [27:test:zxvzx... 1M.&lt;V N, ...]
  Left contains more items, first extra item: None:nameUV:header   sSi2+:footeropd'O!|N?4d
  Use -v to get the full diff</message>
      </failure>
      <steps/>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="4004-MainThread"/>
        <label name="host" value="DESKTOP-TRIRNDH"/>
      </labels>
    </test-case>
    <test-case start="1487271124879" status="passed" stop="1487271126834">
      <name>test_add_group[None:name $ b$:headerk9D_keOr &lt;5&lt;Fe X1:footerdi@Q"J&gt;P6]</name>
      <steps/>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="4004-MainThread"/>
        <label name="host" value="DESKTOP-TRIRNDH"/>
      </labels>
    </test-case>
    <test-case start="1487271126835" status="passed" stop="1487271128576">
      <name>test_add_group[None:name0[P^:header$+PE4:footerd%(]</name>
      <steps/>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="4004-MainThread"/>
        <label name="host" value="DESKTOP-TRIRNDH"/>
      </labels>
    </test-case>
    <test-case start="1487271128577" status="passed" stop="1487271130421">
      <name>test_add_group[None:nameO |r C:header+ x "}Eg0" :footer.lqI_-)#;p h]</name>
      <steps/>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="4004-MainThread"/>
        <label name="host" value="DESKTOP-TRIRNDH"/>
      </labels>
    </test-case>
    <test-case start="1487271130422" status="failed" stop="1487271132537">
      <name>test_add_group[None:nameFAt):headerA:footerdG]fXihB[&amp;qGj7'QD]</name>
      <failure>
        <stack-trace>app = &lt;fixture.application.Application object at 0x0000022A22FF2AC8&gt;
db = &lt;fixture.db.DbFixture object at 0x0000022A22EF8A20&gt;
json_groups = None:nameFAt):headerA:footerdG]fXihB[&amp;qGj7'QD, check_ui = False

    def test_add_group(app, db, json_groups, check_ui):
            group = json_groups
            old_groups = db.get_group_list()
            app.group.create(group)
            new_groups = db.get_group_list()
            old_groups.append(group)
&gt;           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)
E           assert [27:test:zxvz... 1M.&lt;V N, ...] == [27:test:zxvzx... 1M.&lt;V N, ...]
E             Left contains more items, first extra item: None:nameFAt):headerA:footerdG]fXihB[&amp;qGj7'QD
E             Use -v to get the full diff

test\test_add_group.py:10: AssertionError</stack-trace>
        <message>AssertionError: assert [27:test:zxvz... 1M.&lt;V N, ...] == [27:test:zxvzx... 1M.&lt;V N, ...]
  Left contains more items, first extra item: None:nameFAt):headerA:footerdG]fXihB[&amp;qGj7'QD
  Use -v to get the full diff</message>
      </failure>
      <steps/>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="4004-MainThread"/>
        <label name="host" value="DESKTOP-TRIRNDH"/>
      </labels>
    </test-case>
    <test-case start="1487271132538" status="passed" stop="1487271134466">
      <name>test_add_group[None:name0:header:footervD4ags]</name>
      <steps/>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="4004-MainThread"/>
        <label name="host" value="DESKTOP-TRIRNDH"/>
      </labels>
    </test-case>
  </test-cases>
  <labels/>
</ns0:test-suite>
